rv Version 3.5                        Thu Oct 30 14:46:08 2025
Zach Mascetta

Header
R
A 0000008c
A 000000dc
A 000000f0
A 000000f8
C

Loc     Code         Source Code
               # Write and run an assembly language program that
               # Your subroutine should display the number in bi
               # Test your program by entered 3210BCD.
               # Display the binary number with a space between 

               # NOTE: there are obviously more error checks tha
               # but for the sake of brevity, I'm only checking 
               # from A through F has been entered.

               # a0 = buffer

               # t0 = character from buffer
               # t1 = logic result for lower bound
               # t2 = logic result for upper bound
               # t3 = result of logic check

               # s0 = prompt
               # s1 = label
               # s2 = space
               # s3 = sentinel value for subroutine
0000  00a00993                 addi s3, x0, 10                 #
0004  0f01a903                 lw s2, aspace                   #
0008  08c1a403                 lw s0, aprompt                  #
000c  0c040000                 sout s0                         #
0010  0f81a503                 lw a0, abuffer                  #
0014  14050000                 sin a0                          #
0018  0dc1a483                 lw s1, alabel
001c  0c048000                 sout s1
0020  00050283                 lb t0, 0(a0)                    #

0024  008000ef                 jal ra, subroutine              #

0028  00000000                 halt 

               # the logic here can be a bit confusing as the re
               # First check to see if it is less than 59/71. Sh
               # Second check to see if less than 48/65. Should 
               # Branch if t2 >= t1. there are 3 scenarios where
               # and only 1 where it is false.
               # If character is a digit, it will fail the first
               # If character is an uppercase letter, it will fa

002c  03b2a313 subroutine:     slti t1, t0, 59                 #
0030  0302a393                 slti t2, t0, 48                 #
0034  0063d463                 bge t2, t1, 16(subroutine)      #
0038  fd028293                 addi t0, t0, -48                #

003c  0472a313                 slti t1, t0, 71                 #
0040  0412a393                 slti t2, t0, 65                 #
0044  0063d463                 bge t2, t1, 32(subroutine)       
0048  fc928293                 addi t0, t0, -55                #

004c  0082fe13                 andi t3, t0, 0x8                #
0050  003e5e13                 srli t3, t3, 3                  #
0054  040e0000                 dout t3                         #

0058  0042fe13                 andi t3, t0, 0x4                #
005c  002e5e13                 srli t3, t3, 2                  #
0060  040e0000                 dout t3                         #

0064  0022fe13                 andi t3, t0, 0x2                #
0068  001e5e13                 srli t3, t3, 1                  #
006c  040e0000                 dout t3                         #

0070  0012fe13                 andi t3, t0, 0x1                #
0074  040e0000                 dout t3                         #
0078  0c090000                 sout s2                         #

007c  00150513                 addi a0, a0, 1                  #
0080  00050283                 lb t0, 0(a0)                    #
0084  fb3294e3                 bne t0, s3, 0(subroutine)       #
0088  00008067                 jalr x0, 0(ra)                  #



008c  00000090 aprompt:        .word   prompt
0090  65746e45 prompt:         .asciz  "Enter a hex number (plea
0094  20612072
0098  20786568
009c  626d756e
00a0  28207265
00a4  61656c70
00a8  75206573
00ac  61206573
00b0  70616320
00b4  6c617469
00b8  74656c20
00bc  20726574
00c0  65206669
00c4  7265746e
00c8  20676e69
00cc  69676964
00d0  31207374
00d4  35312d30
00d8  00203a29

00dc  000000e0 alabel:         .word   label
00e0  616e6942 label:          .asciz "Binary Value: "
00e4  56207972
00e8  65756c61
00ec  0000203a

00f0  000000f4 aspace:         .word   space
00f4  00000020 space:          .asciz  " "

00f8  000000fc abuffer:        .word   buffer
00fc  00000000 buffer:         .zero   100
015c  00000000
======================================================= Output
Enter a hex number (please use a capital letter if entering digits 10-15): 3210BCD
Binary Value: 0011 0010 0001 0000 1011 1100 1101 
=========================================== Program statistics
Input file name       = c03q09.a
Instructions executed = 166 (decimal)
Program size          = 160 (hex) 352 (decimal)
Load point            = 0 (hex) 0 (decimal)
Programmer            = Zach Mascetta
